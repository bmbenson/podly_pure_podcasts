"""Refactor transcripts to DB tables: TranscriptSegment, ModelCall, Identification

Revision ID: b92e47a03bb2
Revises: ded4b70feadb
Create Date: 2025-05-11 12:24:43.232263

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "b92e47a03bb2"
down_revision = "ded4b70feadb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "model_call",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("first_segment_sequence_num", sa.Integer(), nullable=False),
        sa.Column("last_segment_sequence_num", sa.Integer(), nullable=False),
        sa.Column("model_name", sa.String(), nullable=False),
        sa.Column("prompt", sa.Text(), nullable=False),
        sa.Column("response", sa.Text(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("retry_attempts", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["post.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("model_call", schema=None) as batch_op:
        batch_op.create_index(
            "ix_model_call_post_chunk_model",
            [
                "post_id",
                "first_segment_sequence_num",
                "last_segment_sequence_num",
                "model_name",
            ],
            unique=True,
        )

    op.create_table(
        "transcript_segment",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("sequence_num", sa.Integer(), nullable=False),
        sa.Column("start_time", sa.Float(), nullable=False),
        sa.Column("end_time", sa.Float(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["post.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("transcript_segment", schema=None) as batch_op:
        batch_op.create_index(
            "ix_transcript_segment_post_id_sequence_num",
            ["post_id", "sequence_num"],
            unique=True,
        )

    op.create_table(
        "identification",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("transcript_segment_id", sa.Integer(), nullable=False),
        sa.Column("model_call_id", sa.Integer(), nullable=False),
        sa.Column("confidence", sa.Float(), nullable=True),
        sa.Column("label", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["model_call_id"],
            ["model_call.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transcript_segment_id"],
            ["transcript_segment.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("identification", schema=None) as batch_op:
        batch_op.create_index(
            "ix_identification_segment_call_label",
            ["transcript_segment_id", "model_call_id", "label"],
            unique=True,
        )

    op.drop_table("transcript")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "transcript",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("post_id", sa.INTEGER(), nullable=False),
        sa.Column("content", sa.TEXT(), nullable=False),
        sa.Column("timestamp", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["post.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("post_id"),
    )
    with op.batch_alter_table("identification", schema=None) as batch_op:
        batch_op.drop_index("ix_identification_segment_call_label")

    op.drop_table("identification")
    with op.batch_alter_table("transcript_segment", schema=None) as batch_op:
        batch_op.drop_index("ix_transcript_segment_post_id_sequence_num")

    op.drop_table("transcript_segment")
    with op.batch_alter_table("model_call", schema=None) as batch_op:
        batch_op.drop_index("ix_model_call_post_chunk_model")

    op.drop_table("model_call")
    # ### end Alembic commands ###
